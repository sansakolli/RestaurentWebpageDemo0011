<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Annapurna - Authentic Telugu Cuisine</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Telugu&family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        html { scroll-behavior: smooth; }
        body {
            font-family: 'Poppins', sans-serif;
        }
        .telugu-title {
            font-family: 'Noto Sans Telugu', sans-serif;
        }
        /* Animation for modal */
        @keyframes fadeIn {
            from { opacity: 0; transform: scale(0.95); }
            to { opacity: 1; transform: scale(1); }
        }
        .modal-fade-in {
            animation: fadeIn 0.3s ease-out;
        }
        .loader {
            border: 4px solid #f3f3f3;
            border-radius: 50%;
            border-top: 4px solid #fb923c; /* orange-400 */
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        /* For hiding the scrollbar */
        .scrollbar-hide::-webkit-scrollbar {
            display: none;
        }
        .scrollbar-hide {
            -ms-overflow-style: none;  /* IE and Edge */
            scrollbar-width: none;  /* Firefox */
        }
        #hero-carousel {
            touch-action: pan-y; /* Allows vertical scroll, prevents browser horizontal swipe */
        }
    </style>
</head>
<body class="bg-gray-50 text-gray-800">

    <!-- Mobile Header -->
    <header id="mobile-header" class="md:hidden bg-white shadow-md fixed top-0 left-0 right-0 z-40 flex justify-between items-center p-4">
        <button id="menu-icon" class="text-2xl text-gray-700" aria-label="Open menu">
            <i class="fas fa-bars"></i>
        </button>
        <h1 class="telugu-title text-2xl font-bold text-orange-500">అన్నపూర్ణ</h1>
        <button id="cart-icon-mobile" class="relative text-2xl text-gray-700" aria-label="Open cart">
            <i class="fas fa-shopping-cart"></i>
            <span id="cart-badge-mobile" class="absolute -top-2 -right-2 bg-orange-500 text-white text-xs font-bold rounded-full h-5 w-5 flex items-center justify-center">0</span>
        </button>
    </header>

    <!-- Mobile Navigation Drawer -->
    <div id="nav-drawer-container" class="fixed inset-0 z-50 md:hidden hidden">
        <div id="drawer-overlay" class="absolute inset-0 bg-black bg-opacity-50"></div>
        <div id="nav-drawer" class="relative h-full w-64 bg-white shadow-lg transform -translate-x-full transition-transform duration-300 ease-in-out">
            <div class="p-4">
                <button id="close-nav" class="text-3xl text-gray-600 mb-8" aria-label="Close menu">&times;</button>
                <nav>
                    <a href="#menu" class="nav-link block py-2 px-4 text-lg text-gray-700 hover:bg-orange-100 rounded">Menu</a>
                    <a href="#about" class="nav-link block py-2 px-4 text-lg text-gray-700 hover:bg-orange-100 rounded">About</a>
                    <a href="#contact" class="nav-link block py-2 px-4 text-lg text-gray-700 hover:bg-orange-100 rounded">Contact</a>
                </nav>
            </div>
        </div>
    </div>

    <!-- Desktop Navigation -->
    <nav id="desktop-nav" class="hidden md:flex bg-white shadow-md sticky top-0 z-30 w-full">
        <div class="container mx-auto flex justify-between items-center p-4">
            <h1 class="text-3xl font-bold text-orange-500">Annapurna</h1>
            <div class="flex items-center space-x-8 text-lg">
                <a href="#menu" class="text-gray-700 hover:text-orange-500 transition-colors">Menu</a>
                <a href="#about" class="text-gray-700 hover:text-orange-500 transition-colors">About</a>
                <a href="#contact" class="text-gray-700 hover:text-orange-500 transition-colors">Contact</a>
                <button id="cart-icon-desktop" class="relative text-gray-700 hover:text-orange-500 transition-colors flex items-center space-x-2" aria-label="Open cart">
                    <i class="fas fa-shopping-cart text-2xl"></i>
                    <span>Cart</span>
                    <span id="cart-count-desktop" class="bg-orange-500 text-white text-xs font-bold rounded-full h-5 w-5 flex items-center justify-center">0</span>
                </button>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="pt-16 md:pt-0">
        <!-- Hero Section with Carousel -->
        <section id="hero" class="bg-orange-50 pb-8 md:pb-12">
            <!-- Carousel Container -->
            <div id="hero-carousel" class="relative w-full shadow-lg overflow-hidden">
                <div id="carousel-track" class="flex transition-transform duration-500 ease-in-out">
                    <!-- Slide 1: Branding -->
                    <div class="carousel-slide w-full flex-shrink-0 relative">
                        <img src="https://images.pexels.com/photos/1640777/pexels-photo-1640777.jpeg" class="w-full h-[31vh] max-h-[300px] md:h-[55vh] md:max-h-[500px] object-cover" alt="Delicious Telugu Food Platter">
                        <div class="absolute inset-0 flex flex-col items-center justify-center p-4 bg-black/50 text-center">
                            <h3 class="telugu-title text-3xl md:text-5xl font-bold text-white" style="text-shadow: 2px 2px 4px rgba(0,0,0,0.7);">అన్నపూర్ణ</h3>
                            <p class="text-lg md:text-2xl text-gray-100 mt-2" style="text-shadow: 1px 1px 3px rgba(0,0,0,0.7);">అసలైన తెలుగు రుచులకు చిరునామా</p>
                        </div>
                    </div>
                    <!-- Slide 2: Special Dish -->
                    <div class="carousel-slide w-full flex-shrink-0 relative">
                        <img src="https://images.pexels.com/photos/3184192/pexels-photo-3184192.jpeg" class="w-full h-[31vh] max-h-[300px] md:h-[55vh] md:max-h-[500px] object-cover" alt="Spicy Andhra Curry">
                         <div class="absolute inset-0 flex flex-col items-center justify-center p-4 bg-black/50 text-center">
                            <h3 class="telugu-title text-3xl md:text-5xl font-bold text-white" style="text-shadow: 2px 2px 4px rgba(0,0,0,0.7);">హైదరాబాదీ దమ్ బిర్యానీ</h3>
                            <p class="text-lg md:text-2xl text-gray-100 mt-2" style="text-shadow: 1px 1px 3px rgba(0,0,0,0.7);">మా ప్రత్యేకత, మీకోసం</p>
                        </div>
                    </div>
                    <!-- Slide 3: Festival Offer -->
                    <div class="carousel-slide w-full flex-shrink-0 relative">
                        <img src="https://www.foodiesfeed.com/wp-content/uploads/2023/08/crispy-spicy-chicken-wings.jpg" class="w-full h-[31vh] max-h-[300px] md:h-[55vh] md:max-h-[500px] object-cover" alt="Crispy Chicken Appetizer">
                         <div class="absolute inset-0 flex flex-col items-center justify-center p-4 bg-black/50 text-center">
                            <h3 class="telugu-title text-3xl md:text-5xl font-bold text-white" style="text-shadow: 2px 2px 4px rgba(0,0,0,0.7);">ప్రత్యేక పండుగ ఆఫర్లు</h3>
                            <p class="text-lg md:text-2xl text-gray-100 mt-2" style="text-shadow: 1px 1px 3px rgba(0,0,0,0.7);">ఈరోజే మీ టేబుల్ బుక్ చేసుకోండి</p>
                        </div>
                    </div>
                </div>
                <!-- Carousel Controls -->
                <button id="carousel-prev" aria-label="Previous Slide" class="absolute z-10 top-1/2 left-4 transform -translate-y-1/2 bg-white/70 text-gray-800 rounded-full w-10 h-10 flex items-center justify-center hover:bg-white transition">
                    <i class="fas fa-chevron-left"></i>
                </button>
                <button id="carousel-next" aria-label="Next Slide" class="absolute z-10 top-1/2 right-4 transform -translate-y-1/2 bg-white/70 text-gray-800 rounded-full w-10 h-10 flex items-center justify-center hover:bg-white transition">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
             <!-- Text content below carousel -->
            <div class="container mx-auto text-center px-4 pt-8">
                <h2 class="text-3xl md:text-4xl font-extrabold text-orange-600">
                    Annapurna 
                <h4 class="text-xl md:text-2xl font-bold text-orange-602">
                    Authentic Telugu Cuisine
                </h4>
                <p class="text-md md:text-lg text-gray-700 mt-3 max-w-3xl mx-auto">
                    Experience the rich flavors of Andhra Pradesh and Telangana
                </p>
                <div class="telugu-title text-xl md:text-2xl text-orange-500 mt-6">
                    "అన్నం పరబ్రహ్మ స్వరూపం"
                    <p class="text-base text-gray-500 italic font-sans mt-1">"Food is the manifestation of divine energy"</p>
                </div>
                <button id="open-ai-chef-btn" class="mt-8 bg-orange-500 text-white font-bold py-3 px-8 rounded-lg hover:bg-orange-600 transition-all duration-300 text-lg shadow-xl transform hover:scale-105">
                    ✨ AI చెఫ్‌ని అడగండి
                </button>
            </div>
        </section>

        <!-- Menu Section -->
        <section id="menu" class="py-16 md:py-24">
            <div class="container mx-auto px-4">
                <h3 class="text-3xl md:text-4xl font-bold text-center mb-4">Our Delicious Menu</h3>
                
                <!-- Category Filter -->
                <div id="category-filter-container" class="mb-8 flex space-x-2 overflow-x-auto pb-2 -mx-4 px-4 scrollbar-hide">
                    <!-- Categories will be injected here -->
                </div>

                <div id="menu-grid" class="grid grid-cols-2 lg:grid-cols-4 gap-4 md:gap-8">
                    <!-- Menu items will be injected here -->
                </div>
            </div>
        </section>

        <!-- About & Contact Sections -->
        <section class="bg-white py-16 md:py-24">
            <div class="container mx-auto px-4 grid grid-cols-1 md:grid-cols-2 gap-12 text-center">
                <div id="about">
                    <h3 class="text-3xl font-bold mb-6">About Us</h3>
                    <p class="text-gray-600 max-w-md mx-auto">Annapurna brings you the authentic flavors of Telugu cuisine. Our chefs use traditional recipes and the freshest ingredients for a memorable dining experience.</p>
                    <div class="telugu-title text-xl text-orange-500 mt-6">
                        "కడుపు నిండా తిని, మనసు నిండా మాట్లాడు"
                        <p class="text-base text-gray-500 italic font-sans mt-1">"Eat to your heart's content, speak to your mind's content"</p>
                    </div>
                </div>
                <div id="contact">
                     <h3 class="text-3xl font-bold mb-6">Contact Us</h3>
                     <div class="text-gray-600">
                        <p><strong>Phone:</strong> (555) 123-4567</p>
                        <p><strong>Email:</strong> info@annapurna.com</p>
                        <p><strong>Address:</strong> 123 Spice Street, Flavortown</p>
                     </div>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer -->
    <footer class="bg-gray-800 text-white py-12">
        <div class="container mx-auto text-center">
            <p>&copy; 2025 Annapurna. All rights reserved.</p>
             <div class="telugu-title text-xl text-orange-300 mt-6">
                "అతిథి దేవో భవ"
                <p class="text-sm text-gray-400 italic font-sans mt-1">"The guest is equivalent to God"</p>
            </div>
        </div>
    </footer>

    <!-- Cart Modal -->
    <div id="cart-modal" class="fixed inset-0 bg-black bg-opacity-60 z-50 hidden flex items-center justify-center">
        <div id="cart-content" class="bg-white rounded-lg shadow-2xl w-11/12 md:w-1/2 lg:w-1/3 p-6 modal-fade-in relative">
            <button id="close-cart" class="absolute top-4 right-4 text-2xl text-gray-500 hover:text-gray-800" aria-label="Close cart">&times;</button>
            <h2 class="text-2xl font-bold mb-6">Your Cart</h2>
            <div id="cart-items" class="mb-6 max-h-64 overflow-y-auto"></div>
            <div id="cart-total" class="text-xl font-bold text-right mb-6"></div>
            <input type="text" id="customer-name" placeholder="Your Name" class="w-full p-3 border border-gray-300 rounded-lg mb-2 focus:ring-2 focus:ring-orange-500 focus:border-orange-500 outline-none" required>
            <input type="tel" id="customer-phone" placeholder="Your 10-digit phone number" class="w-full p-3 border border-gray-300 rounded-lg mb-2 focus:ring-2 focus:ring-orange-500 focus:border-orange-500 outline-none" required>
            <div id="checkout-error" class="text-red-500 text-sm text-center mb-2 h-5"></div>
            <button id="checkout-btn" class="w-full bg-orange-500 text-white font-bold py-3 px-4 rounded-lg hover:bg-orange-600 transition-colors text-lg">
                Order on WhatsApp
            </button>
        </div>
    </div>

    <!-- AI Chef Modal -->
    <div id="ai-chef-modal" class="fixed inset-0 bg-black bg-opacity-60 z-50 hidden flex items-center justify-center">
        <div class="bg-white rounded-lg shadow-2xl w-11/12 md:w-1/2 lg:w-1/3 p-6 modal-fade-in relative">
            <button id="close-ai-chef-modal" class="absolute top-4 right-4 text-2xl text-gray-500 hover:text-gray-800" aria-label="Close AI Chef">&times;</button>
            <h2 class="text-2xl font-bold mb-6">✨ మా AI చెఫ్‌ని అడగండి</h2>
            <p class="text-gray-600 mb-4">మీకు ఇష్టమైనవి మాకు చెప్పండి, మా AI మీకు సరైన భోజనాన్ని సూచిస్తుంది!</p>
            
            <div id="ai-chef-form">
                <div class="mb-4">
                    <label for="people-count" class="block text-sm font-medium text-gray-700">ఎంత మంది?</label>
                    <select id="people-count" class="mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-orange-500 focus:border-orange-500">
                        <option>1</option>
                        <option>2</option>
                        <option>3-4</option>
                        <option>5+</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label for="diet-pref" class="block text-sm font-medium text-gray-700">ఆహార ప్రాధాన్యత</label>
                    <select id="diet-pref" class="mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-orange-500 focus:border-orange-500">
                        <option>ఏదైనా</option>
                        <option>శాఖాహారం</option>
                        <option>మాంసాహారం</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label for="spice-level" class="block text-sm font-medium text-gray-700">కారం స్థాయి</label>
                    <select id="spice-level" class="mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-orange-500 focus:border-orange-500">
                        <option>తక్కువ</option>
                        <option>మధ్యస్థం</option>
                        <option>ఎక్కువ</option>
                    </select>
                </div>
                <button id="get-recommendation-btn" class="w-full bg-orange-500 text-white font-bold py-3 px-4 rounded-lg hover:bg-orange-600 transition-colors text-lg mt-2">
                    సూచన పొందండి
                </button>
            </div>
            
            <div id="ai-chef-result" class="hidden">
                <h3 class="text-xl font-semibold mb-2">చెఫ్ సూచన:</h3>
                <div id="ai-recommendation-text" class="text-gray-700 bg-orange-50 p-4 rounded-lg mb-4"></div>
                <button id="add-combo-to-cart-btn" class="w-full bg-green-500 text-white font-bold py-3 px-4 rounded-lg hover:bg-green-600 transition-colors text-lg">కార్ట్‌కు జోడించండి</button>
                <button id="ask-again-btn" class="w-full mt-2 text-sm text-gray-600 hover:text-orange-500">మళ్లీ అడగండి</button>
            </div>
             <div id="ai-chef-loader" class="hidden flex-col items-center justify-center py-8">
                <div class="loader"></div>
                <p class="mt-4 text-gray-600">మా చెఫ్ ఆలోచిస్తున్నారు...</p>
            </div>
        </div>
    </div>
    
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // --- State Management ---
        let cart = [];
        let recommendedItems = [];
        let activeCategory = 'All';

        // --- Data ---
        const menuData = [
            { id: '1', name: 'Hyderabadi Biryani', price: 250, category: 'Biryani', description: 'Fragrant rice with tender meat and spices.', image: 'https://b.zmtcdn.com/data/pictures/chains/4/21164584/16461443d82063b28f100c36b8835807.png' },
            { id: '2', name: 'Andhra Chicken Curry', price: 220, category: 'Curries', description: 'Spicy and tangy curry with Andhra spices.', image: 'https://www.shutterstock.com/image-photo/homemade-chicken-korma-curry-dish-600nw-699200920.jpg' },
            { id: '3', name: 'Pesarattu', price: 80, category: 'Tiffins', description: 'Nutritious green gram dosa with ginger chutney.', image: 'https://b2958125.smushcdn.com/2958125/wp-content/uploads/pesarattu.jpg?lossy=1&strip=1&webp=1' },
            { id: '4', name: 'Gongura Pachadi', price: 60, category: 'Sides', description: 'Tangy and spicy chutney from gongura leaves.', image: 'https://tulasipickles.com/wp-content/uploads/2024/11/Gongura.jpg' },
            { id: '5', name: 'Mutton Biryani', price: 350, category: 'Biryani', description: 'Rich and flavorful mutton biryani.', image: 'https://b.zmtcdn.com/data/dish_photos/2a7/c15dccaeee91798a7005170a7c9d92a7.jpg' },
            { id: '6', name: 'Veg Dum Biryani', price: 220, category: 'Biryani', description: 'Aromatic vegetable dum biryani.', image: 'https://t3.ftcdn.net/jpg/12/01/85/96/360_F_1201859641_7YGp6cKX1e9PVCbElNqtEK2VLAguJdtm.jpg' },
            { id: '7', name: 'Gutti Vankaya Kura', price: 180, category: 'Curries', description: 'Stuffed eggplant curry, a Telugu specialty.', image: 'https://cakeworkorange.com/wp-content/uploads/2020/11/stuffed-brinjal-curry-1-500x500.jpg' },
            { id: '8', name: 'Royyala Iguru', price: 280, category: 'Curries', description: 'Spicy and thick prawn curry.', image: 'https://www.indianhealthyrecipes.com/wp-content/uploads/2017/11/royyala-iguru-recipe-prawns-curry-500x500.jpg' },
            { id: '9', name: 'Punugulu', price: 70, category: 'Tiffins', description: 'Deep-fried crispy snack with chutney.', image: 'https://t3.ftcdn.net/jpg/04/43/82/54/360_F_443825456_biaQgzww9RIheo6xg9rtpVolT3GXwJF5.jpg' },
            { id: '10', name: 'Chicken 65', price: 240, category: 'Starters', description: 'Spicy, deep-fried chicken starter.', image: 'https://media.istockphoto.com/id/1265209311/photo/fried-chicken-kebab-or-kabab.jpg?s=612x612&w=0&k=20&c=cq6fgpRnjpiD3ILifT3bPg2m8EnxtUvG7M8oB-9h1MY=' },
            { id: '11', name: 'Mirapakaya Bajji', price: 60, category: 'Starters', description: 'Stuffed chilli fritters, a popular snack.', image: 'https://t3.ftcdn.net/jpg/16/10/88/88/360_F_1610888817_DSfrlg2XTr6rspf5xmmAs7n3iZfJzjOU.jpg' },
            { id: '12', name: 'Ulavacharu', price: 120, category: 'Sides', description: 'Traditional horse gram soup.', image: 'https://www.fiahomefoods.com/uploads/products/ulavacharu-fia_1666271288.jpg' },
            { id: '13', name: 'Bobbatlu', price: 90, category: 'Desserts', description: 'Sweet flatbread with lentil filling.', image: 'https://www.shutterstock.com/image-photo/puran-poli-known-holige-indian-600nw-781347691.jpg' },
            { id: '14', name: 'MLA Pesarattu', price: 110, category: 'Tiffins', description: 'Pesarattu with a filling of upma.', image: 'https://img-global.cpcdn.com/recipes/aa448a6b848380e0/680x781cq80/mla-pesarattu-recipe-main-photo.jpg' }
        ];
        const categories = ['All', 'Starters', 'Biryani', 'Curries', 'Tiffins', 'Sides', 'Desserts'];

        // --- Utility Functions ---
        const getEl = (id) => document.getElementById(id);

        // --- Element Selectors ---
        const elements = {
            cartModal: getEl('cart-modal'), cartItemsEl: getEl('cart-items'), cartTotalEl: getEl('cart-total'),
            cartCountDesktop: getEl('cart-count-desktop'), cartBadgeMobile: getEl('cart-badge-mobile'),
            cartIconDesktop: getEl('cart-icon-desktop'),
            cartIconMobile: getEl('cart-icon-mobile'), closeCartButton: getEl('close-cart'),
            checkoutBtn: getEl('checkout-btn'), menuIcon: getEl('menu-icon'),
            navDrawerContainer: getEl('nav-drawer-container'), navDrawer: getEl('nav-drawer'),
            closeNav: getEl('close-nav'), drawerOverlay: getEl('drawer-overlay'),
            navLinks: document.querySelectorAll('.nav-link'), 
            customerName: getEl('customer-name'), phoneInput: getEl('customer-phone'), errorEl: getEl('checkout-error'),
            // Carousel Elements
            heroCarousel: getEl('hero-carousel'), carouselTrack: getEl('carousel-track'),
            carouselPrev: getEl('carousel-prev'), carouselNext: getEl('carousel-next'),
            // Menu
            categoryFilterContainer: getEl('category-filter-container'), menuGrid: getEl('menu-grid'),
            // AI Chef Elements
            openAiChefBtn: getEl('open-ai-chef-btn'), aiChefModal: getEl('ai-chef-modal'),
            closeAiChefModal: getEl('close-ai-chef-modal'), getRecommendationBtn: getEl('get-recommendation-btn'),
            aiChefForm: getEl('ai-chef-form'), aiChefResult: getEl('ai-chef-result'),
            aiRecommendationText: getEl('ai-recommendation-text'), addComboToCartBtn: getEl('add-combo-to-cart-btn'),
            askAgainBtn: getEl('ask-again-btn'), aiChefLoader: getEl('ai-chef-loader'),
        };

        // --- Core Cart Logic ---
        const updateCart = (itemId, change) => {
            const menuItem = menuData.find(item => item.id === itemId);
            if (!menuItem) return;
            let cartItem = cart.find(item => item.id === itemId);
            if (cartItem) {
                cartItem.quantity += change;
                if (cartItem.quantity <= 0) cart = cart.filter(item => item.id !== itemId);
            } else if (change > 0) {
                cart.push({ ...menuItem, quantity: 1 });
            }
            updateAllUI();
        };
        const removeItemFromCart = (itemId) => {
            cart = cart.filter(item => item.id !== itemId);
            updateAllUI();
        };

        // --- UI Update Functions ---
        const updateAllUI = () => {
            const totalCount = cart.reduce((sum, item) => sum + item.quantity, 0);
            if (elements.cartCountDesktop) elements.cartCountDesktop.textContent = totalCount;
            if (elements.cartBadgeMobile) elements.cartBadgeMobile.textContent = totalCount;
            renderMenuControls();
            updateCartModal();
        };

        const renderMenuControls = () => {
            document.querySelectorAll('.menu-item-controls').forEach(container => {
                const itemId = container.dataset.id;
                const cartItem = cart.find(item => item.id === itemId);
                if (cartItem && cartItem.quantity > 0) {
                    container.innerHTML = `<div class="flex items-center justify-center space-x-2"><button class="quantity-change bg-orange-500 text-white rounded-full w-7 h-7 font-bold flex items-center justify-center" data-id="${itemId}" data-change="-1">-</button><span class="font-bold text-lg">${cartItem.quantity}</span><button class="quantity-change bg-orange-500 text-white rounded-full w-7 h-7 font-bold flex items-center justify-center" data-id="${itemId}" data-change="1">+</button></div>`;
                } else {
                    container.innerHTML = `<button class="add-item-btn bg-green-500 text-white font-bold py-1.5 px-3 rounded-lg hover:bg-green-600 transition-colors text-sm" data-id="${itemId}">Add</button>`;
                }
            });
            attachMenuControlListeners();
        };

        const updateCartModal = () => {
            if (!elements.cartItemsEl || !elements.cartTotalEl) return;
            if (cart.length === 0) {
                elements.cartItemsEl.innerHTML = '<p class="text-gray-500 text-center py-4">Your cart is empty.</p>';
                elements.cartTotalEl.textContent = ''; return;
            }
            elements.cartItemsEl.innerHTML = '';
            let total = 0;
            cart.forEach(item => {
                const itemElement = document.createElement('div');
                itemElement.className = 'flex justify-between items-center py-3 border-b';
                itemElement.innerHTML = `<div><p class="font-semibold">${item.name}</p><div class="flex items-center space-x-3 mt-1"><button class="cart-quantity-change bg-gray-200 rounded-full w-6 h-6 font-bold" data-id="${item.id}" data-change="-1">-</button><span class="font-bold">${item.quantity}</span><button class="cart-quantity-change bg-gray-200 rounded-full w-6 h-6 font-bold" data-id="${item.id}" data-change="1">+</button></div></div><div class="text-right"><p class="font-semibold">₹${item.price * item.quantity}</p><button class="remove-item text-red-500 text-xs hover:underline mt-1" data-id="${item.id}"><i class="fas fa-trash-alt mr-1"></i>Remove</button></div>`;
                elements.cartItemsEl.appendChild(itemElement);
                total += item.price * item.quantity;
            });
            elements.cartTotalEl.innerHTML = `<strong>Total:</strong> ₹${total}`;
            attachCartModalListeners();
        };

        const renderCategories = () => {
            if (!elements.categoryFilterContainer) return;
            elements.categoryFilterContainer.innerHTML = categories.map(cat => `<button class="category-btn whitespace-nowrap py-2 px-5 rounded-full text-sm font-semibold transition-colors ${activeCategory === cat ? 'bg-orange-500 text-white' : 'bg-gray-200 text-gray-700'}" data-filter="${cat}">${cat}</button>`).join('');
        };
        
        const renderMenuItems = (itemsToRender) => {
            if (!elements.menuGrid) return;
            elements.menuGrid.innerHTML = itemsToRender.map(item => `
                <div class="bg-white rounded-lg shadow-lg overflow-hidden transform hover:-translate-y-2 transition-transform duration-300">
                    <img src="${item.image}" alt="${item.name}" class="w-full h-36 object-cover">
                    <div class="p-4">
                        <h4 class="text-md font-semibold mb-1 truncate">${item.name}</h4>
                        <p class="text-gray-600 text-xs mb-3 h-8 overflow-hidden">${item.description}</p>
                        <div class="flex justify-between items-center">
                            <span class="text-lg font-bold text-orange-500">₹${item.price}</span>
                            <div class="menu-item-controls" data-id="${item.id}"></div>
                        </div>
                    </div>
                </div>
            `).join('');
            renderMenuControls();
        };

        // --- Event Listener Attachment ---
        const attachMenuControlListeners = () => {
            document.querySelectorAll('.add-item-btn').forEach(btn => {
                btn.onclick = (e) => updateCart(e.currentTarget.dataset.id, 1);
            });
            document.querySelectorAll('.quantity-change').forEach(btn => {
                btn.onclick = (e) => updateCart(e.currentTarget.dataset.id, parseInt(e.currentTarget.dataset.change));
            });
        };
        const attachCartModalListeners = () => {
            elements.cartItemsEl.querySelectorAll('.cart-quantity-change').forEach(btn => btn.addEventListener('click', (e) => updateCart(e.currentTarget.dataset.id, parseInt(e.currentTarget.dataset.change))));
            elements.cartItemsEl.querySelectorAll('.remove-item').forEach(btn => btn.addEventListener('click', (e) => removeItemFromCart(e.currentTarget.dataset.id)));
        };

        const toggleModal = (modal, show) => { if (modal) { modal.classList.toggle('hidden', !show); modal.classList.toggle('flex', show); } };
        const toggleNavDrawer = (show) => {
            if (elements.navDrawerContainer && elements.navDrawer) {
                elements.navDrawerContainer.classList.toggle('hidden', !show);
                setTimeout(() => { elements.navDrawer.classList.toggle('-translate-x-full', !show); }, 10);
            }
        };

        const handleCategoryClick = (e) => {
            const button = e.target.closest('.category-btn');
            if (!button) return;
            activeCategory = button.dataset.filter;
            renderCategories();
            const filteredItems = activeCategory === 'All' ? menuData : menuData.filter(item => item.category === activeCategory);
            renderMenuItems(filteredItems);
        };

        const sendToWhatsApp = (message) => {
            const encodedMessage = encodeURIComponent(message);
            const restaurantWhatsApp = "917780616821";
            const whatsappURL = `https://wa.me/${restaurantWhatsApp}?text=${encodedMessage}`;
            try {
                const newWindow = window.open(whatsappURL, '_blank');
                if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') { throw new Error("Pop-up blocked"); }
                cart = []; updateAllUI(); toggleModal(elements.cartModal, false);
            } catch (error) {
                console.error("Could not open WhatsApp:", error);
                if (elements.errorEl) elements.errorEl.textContent = 'Could not open WhatsApp. Please disable pop-up blockers.';
            } finally {
                if (elements.checkoutBtn) {
                    elements.checkoutBtn.disabled = false;
                    elements.checkoutBtn.innerHTML = 'Order on WhatsApp';
                }
            }
        };

        const handleCheckout = () => {
            const { customerName, phoneInput, errorEl, checkoutBtn } = elements;
            if (!phoneInput || !errorEl || !customerName) return;

            errorEl.textContent = '';
            phoneInput.classList.remove('border-red-500');
            customerName.classList.remove('border-red-500');

            const name = customerName.value.trim();
            const phone = phoneInput.value.trim();

            if (!name) { errorEl.textContent = 'Please enter your name.'; customerName.classList.add('border-red-500'); return; }
            if (!phone || !/^\d{10}$/.test(phone)) { errorEl.textContent = 'Please enter a valid 10-digit phone number.'; phoneInput.classList.add('border-red-500'); return; }
            if (cart.length === 0) { errorEl.textContent = 'Your cart is empty.'; return; }

            checkoutBtn.disabled = true;
            checkoutBtn.innerHTML = '<div class="loader mx-auto" style="width: 28px; height: 28px; border-top-color: white;"></div>';

            let orderMessage = `New Order from ${name} for Annapurna:\n\n*Customer Name:* ${name}\n*Phone:* ${phone}\n\n*Order Details:*\n`;
            let total = 0;
            cart.forEach(item => {
                const itemTotal = item.price * item.quantity;
                orderMessage += `- ${item.name} x ${item.quantity} = ₹${itemTotal}\n`; total += itemTotal;
            });
            orderMessage += `\n*Total Amount: ₹${total}*`;

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const { latitude, longitude } = position.coords;
                        const mapsLink = `https://maps.google.com/?q=${latitude},${longitude}`;
                        orderMessage += `\n\n*Location:* ${mapsLink}`;
                        sendToWhatsApp(orderMessage);
                    },
                    (error) => {
                        console.warn(`Could not get location: ${error.message}`);
                        orderMessage += `\n\n*Location:* Not provided by user.`;
                        sendToWhatsApp(orderMessage);
                    },
                    { timeout: 10000 }
                );
            } else {
                console.warn("Geolocation is not supported.");
                orderMessage += `\n\n*Location:* Not supported by browser.`;
                sendToWhatsApp(orderMessage);
            }
        };
        
        // --- Carousel Logic ---
        const setupCarousel = () => {
            const { heroCarousel, carouselTrack, carouselPrev, carouselNext } = elements;
            if (!heroCarousel || !carouselTrack || !carouselPrev || !carouselNext) return;

            const slides = Array.from(carouselTrack.children);
            if(slides.length === 0) return;

            let currentIndex = 0;
            let autoPlayInterval;
            let touchStartX = 0;
            let touchEndX = 0;

            const showSlide = (index) => {
                carouselTrack.style.transform = `translateX(-${index * 100}%)`;
                currentIndex = index;
            };

            const nextSlide = () => showSlide((currentIndex + 1) % slides.length);
            const prevSlide = () => showSlide((currentIndex - 1 + slides.length) % slides.length);
            
            const startAutoPlay = () => { autoPlayInterval = setInterval(nextSlide, 4000); };
            const stopAutoPlay = () => clearInterval(autoPlayInterval);
            
            carouselNext.addEventListener('click', () => { nextSlide(); stopAutoPlay(); startAutoPlay(); });
            carouselPrev.addEventListener('click', () => { prevSlide(); stopAutoPlay(); startAutoPlay(); });
            
            heroCarousel.addEventListener('touchstart', (e) => {
                touchStartX = e.touches[0].clientX;
                stopAutoPlay();
            });

            heroCarousel.addEventListener('touchend', (e) => {
                touchEndX = e.changedTouches[0].clientX;
                handleSwipe();
                startAutoPlay();
            });
            
            const handleSwipe = () => {
                if (touchStartX - touchEndX > 50) { // Swiped left
                    nextSlide();
                } else if (touchEndX - touchStartX > 50) { // Swiped right
                    prevSlide();
                }
            };
            
            window.addEventListener('resize', () => showSlide(currentIndex));
            
            startAutoPlay();
        };

        // --- Gemini API Function ---
        const handleAiChefRecommendation = async () => {
             const people = getEl('people-count').value;
            const diet = getEl('diet-pref').value;
            const spice = getEl('spice-level').value;

            elements.aiChefForm.classList.add('hidden');
            elements.aiChefLoader.classList.remove('hidden');
            elements.aiChefLoader.classList.add('flex');
            
            const menuString = menuData.map(item => `- ${item.name} (Price: ₹${item.price}, Tags: ${item.category})`).join('\n');
            const userPrompt = `You are an expert chef at 'Annapurna', an authentic Telugu restaurant. Your task is to recommend a complete meal for a customer based on their preferences. Respond in Telugu.

Here is our menu:
${menuString}

Here are the customer's preferences:
- Number of People: ${people}
- Diet: ${diet}
- Spice Level: ${spice}

Based on this, suggest a suitable and delicious meal combination from the menu. Your response MUST be in two parts. First, a short, friendly, and appealing paragraph describing the meal in Telugu (max 3 sentences). Second, on a new line, write "ITEMS:" followed by a comma-separated list of ONLY the item names you are recommending. For example: "ITEMS: Hyderabadi Biryani, Gongura Pachadi"`;
            
            const apiKey = ""; // API Key will be injected by the environment.
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;

            try {
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ contents: [{ parts: [{ text: userPrompt }] }] })
                });

                if (!response.ok) {
                    throw new Error(`API error! status: ${response.status}`);
                }

                const result = await response.json();
                const text = result.candidates[0].content.parts[0].text;
                
                const parts = text.split('ITEMS:');
                const description = parts[0].trim();
                const itemsStr = parts[1] ? parts[1].trim() : '';

                recommendedItems = itemsStr.split(',').map(name => name.trim()).filter(Boolean);
                
                elements.aiRecommendationText.innerText = description;
                elements.aiChefLoader.classList.add('hidden');
                elements.aiChefLoader.classList.remove('flex');
                elements.aiChefResult.classList.remove('hidden');

            } catch (error) {
                console.error("Error fetching AI recommendation:", error);
                elements.aiChefLoader.classList.add('hidden');
                elements.aiChefLoader.classList.remove('flex');
                elements.aiChefResult.classList.remove('hidden');
                elements.aiRecommendationText.innerText = 'క్షమించండి, మా AI చెఫ్ ప్రస్తుతం బిజీగా ఉన్నారు. దయచేసి కాసేపటి తర్వాత మళ్లీ ప్రయత్నించండి.';
                elements.addComboToCartBtn.classList.add('hidden');
            }
        };

        const handleAddComboToCart = () => {
            recommendedItems.forEach(itemName => {
                const menuItem = menuData.find(item => item.name.toLowerCase() === itemName.toLowerCase());
                if (menuItem) {
                    const existingItem = cart.find(item => item.id === menuItem.id);
                    if (existingItem) { existingItem.quantity++; } 
                    else { cart.push({ ...menuItem, quantity: 1 }); }
                }
            });
            updateAllUI();
            toggleModal(elements.aiChefModal, false);
            // Reset AI Chef modal for next time
            setTimeout(() => {
                elements.aiChefResult.classList.add('hidden');
                elements.aiChefForm.classList.remove('hidden');
                elements.addComboToCartBtn.classList.remove('hidden');
            }, 500);
        };
        
        const resetAiChef = () => {
            elements.aiChefResult.classList.add('hidden');
            elements.aiChefForm.classList.remove('hidden');
            elements.addComboToCartBtn.classList.remove('hidden');
        };
        
        // --- Event Listeners Setup ---
        const setupEventListeners = () => {
            if (elements.cartIconDesktop) elements.cartIconDesktop.addEventListener('click', () => toggleModal(elements.cartModal, true));
            if (elements.cartIconMobile) elements.cartIconMobile.addEventListener('click', () => toggleModal(elements.cartModal, true));
            if (elements.closeCartButton) elements.closeCartButton.addEventListener('click', () => toggleModal(elements.cartModal, false));
            if (elements.cartModal) elements.cartModal.addEventListener('click', (e) => { if (e.target === elements.cartModal) toggleModal(elements.cartModal, false); });
            if (elements.checkoutBtn) elements.checkoutBtn.addEventListener('click', handleCheckout);
            if (elements.categoryFilterContainer) elements.categoryFilterContainer.addEventListener('click', handleCategoryClick);

            // Mobile Nav
            if (elements.menuIcon) elements.menuIcon.addEventListener('click', () => toggleNavDrawer(true));
            if (elements.closeNav) elements.closeNav.addEventListener('click', () => toggleNavDrawer(false));
            if (elements.drawerOverlay) elements.drawerOverlay.addEventListener('click', () => toggleNavDrawer(false));
            elements.navLinks.forEach(link => link.addEventListener('click', () => toggleNavDrawer(false)));

            // AI Chef Listeners
            if (elements.openAiChefBtn) elements.openAiChefBtn.addEventListener('click', () => toggleModal(elements.aiChefModal, true));
            if (elements.closeAiChefModal) elements.closeAiChefModal.addEventListener('click', () => {
                toggleModal(elements.aiChefModal, false);
                setTimeout(resetAiChef, 500);
            });
            if (elements.getRecommendationBtn) elements.getRecommendationBtn.addEventListener('click', handleAiChefRecommendation);
            if (elements.addComboToCartBtn) elements.addComboToCartBtn.addEventListener('click', handleAddComboToCart);
            if (elements.askAgainBtn) elements.askAgainBtn.addEventListener('click', resetAiChef);
        };

        // --- Initialize ---
        setupEventListeners();
        setupCarousel();
        renderCategories();
        renderMenuItems(menuData);
    });
    </script>
</body>
</html>

